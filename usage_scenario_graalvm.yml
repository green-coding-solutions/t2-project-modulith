---
name: JMeter Test Plan Execution - Updated for JVMs
author: Arne Tarara <arne@green-coding.io>
description: Demonstrating the usage of JMeter executing a test plan.

services:
  gcb-postgres:
    image: postgres:15.4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - t2-network
    setup-commands:
     - sleep 20 # wait some time to ensure that the database is ready
  gcb-mongo:
    image: mongo:5.0
    networks:
      - t2-network
  gcb-backend:
    build:
      context: .
      dockerfile: Dockerfile.GraalVM
    setup-commands:
       - sleep 10 # wait some time to ensure that the backend is ready
    depends_on:
      - gcb-postgres
      - gcb-mongo
    environment:
      MONGO_HOST: gcb-mongo
      POSTGRES_HOST: gcb-postgres
      SPRING_PROFILES_ACTIVE: gmt
    networks:
      - t2-network
  gcb-jmeter:
    image: t2project/jmeter@sha256:8d0543345f747ae512da2f0732fbd0ee760c7168415d2dce87e77d42fd14390a
    environment:
      JVM_XMN: 100 # maximum nursery size
      JVM_XMS: 250 # initial heap size
      JVM_XMX: 500 # maximum heap size
    networks:
      - t2-network


sci:
  R_d: order
  # One order consists of three sequential requests: get inventory, add product to cart, confirm order

flow:
  - name: Execute JMeter test plan # single user orders one product with a short think time of 1 second
    container: gcb-jmeter
    commands:
      - type: console
        command: sleep 20

      - type: console
        command: jmeter -Jhostname=gcb-backend -Jport=8080 -JnumExecutions=5 -JnumUser=5 -JrampUp=0 -JnumProducts=5 -JthinkTimeMin=1000 -JthinkTimeAdditionalRange=0 -JpauseBeforeExecution=0 -JpauseAfterExecution=0 -JloggingEnabled=true -n -t /tmp/repo/jmeter/jmeter-test-plan.jmx
        log-stdout: true
        read-notes-stdout: true
        read-sci-stdout: true
